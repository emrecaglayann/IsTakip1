// <auto-generated />
using System;
using IsTakip.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IsTakip.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230426195024_1004_Ilk")]
    partial class _1004_Ilk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DepoDepoRaf", b =>
                {
                    b.Property<int>("DepoId")
                        .HasColumnType("int");

                    b.Property<int>("DepoRafId")
                        .HasColumnType("int");

                    b.HasKey("DepoId", "DepoRafId");

                    b.HasIndex("DepoRafId");

                    b.ToTable("DepoDepoRaf");
                });

            modelBuilder.Entity("DepoTedarikci", b =>
                {
                    b.Property<int>("DepoId")
                        .HasColumnType("int");

                    b.Property<int>("TedarikciId")
                        .HasColumnType("int");

                    b.HasKey("DepoId", "TedarikciId");

                    b.HasIndex("TedarikciId");

                    b.ToTable("DepoTedarikci");
                });

            modelBuilder.Entity("IsIsDosya", b =>
                {
                    b.Property<int>("IsDosyalarId")
                        .HasColumnType("int");

                    b.Property<int>("IsId")
                        .HasColumnType("int");

                    b.HasKey("IsDosyalarId", "IsId");

                    b.HasIndex("IsId");

                    b.ToTable("IsIsDosya");
                });

            modelBuilder.Entity("IsMalzemeTip", b =>
                {
                    b.Property<int>("IsId")
                        .HasColumnType("int");

                    b.Property<int>("MalzemeTipId")
                        .HasColumnType("int");

                    b.HasKey("IsId", "MalzemeTipId");

                    b.HasIndex("MalzemeTipId");

                    b.ToTable("IsMalzemeTip");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Ajanda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int?>("MusteriTemsilcisiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NotTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MusteriTemsilcisiId");

                    b.ToTable("Ajanda");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Depo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yetkili")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YetkiliTelefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Depo");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.DepoEnvanter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<int>("Agirlik")
                        .HasColumnType("int");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int>("Boy")
                        .HasColumnType("int");

                    b.Property<int>("DepoId")
                        .HasColumnType("int");

                    b.Property<int>("DepoRafId")
                        .HasColumnType("int");

                    b.Property<int>("En")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KalinlikId")
                        .HasColumnType("int");

                    b.Property<int?>("KalinliklarIdId")
                        .HasColumnType("int");

                    b.Property<int>("MalzemeTipiId")
                        .HasColumnType("int");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepoId")
                        .IsUnique();

                    b.HasIndex("KalinliklarIdId");

                    b.ToTable("DepoEnvanter");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.DepoRaf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DepoRaf");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.DurusTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DurusTip");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Is", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DepoId")
                        .HasColumnType("int");

                    b.Property<int>("Fiyat")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBitimindeBildir")
                        .HasColumnType("bit");

                    b.Property<int>("IsNotu")
                        .HasColumnType("int");

                    b.Property<int>("IsOnceligi")
                        .HasColumnType("int");

                    b.Property<string>("IsOnceliği")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Iscilik")
                        .HasColumnType("bit");

                    b.Property<int>("KalinlikId")
                        .HasColumnType("int");

                    b.Property<int?>("KalinliklarIdId")
                        .HasColumnType("int");

                    b.Property<string>("MalzemeNotu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MalzemeTipId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriSiparisNo")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<int>("TeklifNo")
                        .HasColumnType("int");

                    b.Property<bool>("Teklifli")
                        .HasColumnType("bit");

                    b.Property<string>("Termin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepoId");

                    b.HasIndex("KalinliklarIdId");

                    b.HasIndex("MusteriId");

                    b.ToTable("Is");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.IsDosya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("DosyaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("IsDosya");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.KalinlikId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KalinlikId");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KullaniciKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciSifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MailBildirim")
                        .HasColumnType("bit");

                    b.Property<int?>("MailParametreleriId")
                        .HasColumnType("int");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("RolTanim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MailParametreleriId");

                    b.ToTable("Kullanici");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.MailParametreleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSLKullan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("SmtpAdres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpPort")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MailParametreleri");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.MalzemeTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DepoEnvanterId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepoEnvanterId");

                    b.ToTable("MalzemeTip");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<int?>("DepoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MusteriKisitlamaId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriSinifId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefon")
                        .HasColumnType("int");

                    b.Property<string>("VergiDairesi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VergiNumarasi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepoId");

                    b.HasIndex("MusteriKisitlamaId");

                    b.ToTable("Musteri");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.MusteriKisitlama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IslemAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Kisitlama")
                        .HasColumnType("bit");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MusteriKisitlama");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.MusteriSinif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("MusteriSinif");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.MusteriTemsilcisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("SoyAd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TelefonNumarasi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MusteriTemsilcisi");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Tedarikci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tedarikci");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.UretimDurus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<decimal>("DurusSuresi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DurusTipId")
                        .HasColumnType("int");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<int>("UretimEmriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DurusTipId");

                    b.HasIndex("UretimEmriId");

                    b.ToTable("UretimDurus");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.UretimEmri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<string>("GuncelleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuncelleyenKullaniciId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GüncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IsEmriTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsId")
                        .HasColumnType("int");

                    b.Property<string>("OlusturanKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("ToplamDurusSuresi")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UretimBaslamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UretimDurum")
                        .HasColumnType("bit");

                    b.Property<int>("UretimDurumlari")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UretimTamamlanmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsId")
                        .IsUnique();

                    b.ToTable("UretimEmri");
                });

            modelBuilder.Entity("MusteriMusteriTemsilcisi", b =>
                {
                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriTemsilcisiId")
                        .HasColumnType("int");

                    b.HasKey("MusteriId", "MusteriTemsilcisiId");

                    b.HasIndex("MusteriTemsilcisiId");

                    b.ToTable("MusteriMusteriTemsilcisi");
                });

            modelBuilder.Entity("DepoDepoRaf", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.Depo", null)
                        .WithMany()
                        .HasForeignKey("DepoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Entites.DepoRaf", null)
                        .WithMany()
                        .HasForeignKey("DepoRafId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DepoTedarikci", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.Depo", null)
                        .WithMany()
                        .HasForeignKey("DepoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Entites.Tedarikci", null)
                        .WithMany()
                        .HasForeignKey("TedarikciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IsIsDosya", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.IsDosya", null)
                        .WithMany()
                        .HasForeignKey("IsDosyalarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Entites.Is", null)
                        .WithMany()
                        .HasForeignKey("IsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IsMalzemeTip", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.Is", null)
                        .WithMany()
                        .HasForeignKey("IsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Entites.MalzemeTip", null)
                        .WithMany()
                        .HasForeignKey("MalzemeTipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Ajanda", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.MusteriTemsilcisi", "MusteriTemsilcisi")
                        .WithMany("Ajanda")
                        .HasForeignKey("MusteriTemsilcisiId");

                    b.Navigation("MusteriTemsilcisi");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.DepoEnvanter", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.Depo", null)
                        .WithOne("DepoEnvanter")
                        .HasForeignKey("IsTakip.Core.Entites.DepoEnvanter", "DepoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Entites.KalinlikId", "KalinliklarId")
                        .WithMany("DepoEnvanter")
                        .HasForeignKey("KalinliklarIdId");

                    b.Navigation("KalinliklarId");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Is", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.Depo", "Depo")
                        .WithMany()
                        .HasForeignKey("DepoId");

                    b.HasOne("IsTakip.Core.Entites.KalinlikId", "KalinliklarId")
                        .WithMany("Is")
                        .HasForeignKey("KalinliklarIdId");

                    b.HasOne("IsTakip.Core.Entites.Musteri", "Musteri")
                        .WithMany("Is")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Depo");

                    b.Navigation("KalinliklarId");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Kullanici", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.MailParametreleri", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("MailParametreleriId");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.MalzemeTip", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.DepoEnvanter", null)
                        .WithMany("MalzemeTip")
                        .HasForeignKey("DepoEnvanterId");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Musteri", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.Depo", null)
                        .WithMany("Musteri")
                        .HasForeignKey("DepoId");

                    b.HasOne("IsTakip.Core.Entites.MusteriKisitlama", null)
                        .WithMany("Musteri")
                        .HasForeignKey("MusteriKisitlamaId");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.MusteriSinif", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.Musteri", "Musteri")
                        .WithMany("MusteriSinif")
                        .HasForeignKey("MusteriId");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.UretimDurus", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.DurusTip", "DurusTip")
                        .WithMany("UretimDurus")
                        .HasForeignKey("DurusTipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Entites.UretimEmri", null)
                        .WithMany("UretimDurus")
                        .HasForeignKey("UretimEmriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DurusTip");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.UretimEmri", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.Is", null)
                        .WithOne("UretimEmri")
                        .HasForeignKey("IsTakip.Core.Entites.UretimEmri", "IsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusteriMusteriTemsilcisi", b =>
                {
                    b.HasOne("IsTakip.Core.Entites.Musteri", null)
                        .WithMany()
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsTakip.Core.Entites.MusteriTemsilcisi", null)
                        .WithMany()
                        .HasForeignKey("MusteriTemsilcisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Depo", b =>
                {
                    b.Navigation("DepoEnvanter");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.DepoEnvanter", b =>
                {
                    b.Navigation("MalzemeTip");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.DurusTip", b =>
                {
                    b.Navigation("UretimDurus");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Is", b =>
                {
                    b.Navigation("UretimEmri");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.KalinlikId", b =>
                {
                    b.Navigation("DepoEnvanter");

                    b.Navigation("Is");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.MailParametreleri", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.Musteri", b =>
                {
                    b.Navigation("Is");

                    b.Navigation("MusteriSinif");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.MusteriKisitlama", b =>
                {
                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.MusteriTemsilcisi", b =>
                {
                    b.Navigation("Ajanda");
                });

            modelBuilder.Entity("IsTakip.Core.Entites.UretimEmri", b =>
                {
                    b.Navigation("UretimDurus");
                });
#pragma warning restore 612, 618
        }
    }
}
